@inject IHorarioActividadService _horarioActividadServicio
@inject ISnackbar _snackBar

<MudDialog Style="width:400px">

    <DialogContent>
        <MudContainer Style="max-height: 400px; overflow-y: scroll" Class="m-0 p-0">

            <EditForm Model="@_horario">

                <MudTextField @bind-Value="@_horario.Actividad" Required Class="mb-3"
                              Label="Actividad " Variant="Variant.Outlined" Adornment="Adornment.End" AdornmentIcon="@Icons.Material.Filled.SportsGymnastics" />

                <MudSelect @bind-Value="@_horario.DiaSemana" Label="Día de la semana" AnchorOrigin="Origin.BottomCenter">
                    <MudSelectItem Value="@("Lunes")" />
                    <MudSelectItem Value="@("Martes")" />
                    <MudSelectItem Value="@("Miercoles")" />
                    <MudSelectItem Value="@("Jueves")" />
                    <MudSelectItem Value="@("Viernes")" />
                    <MudSelectItem Value="@("Sabado")" />
                    <MudSelectItem Value="@("Domingo")" />
                </MudSelect>

                <MudTimePicker Label="Hora de inicio" @bind-Time="_horario.HoraInicio" />
                <MudTimePicker Label="Hora de fin" @bind-Time="_horario.HoraFin" />
                <MudTextField @bind-Value="@_horario.Encargado" Required Class="mb-3"
                              Label="Encargado " Variant="Variant.Outlined" Adornment="Adornment.End" AdornmentIcon="@Icons.Material.Filled.Description" />

                </EditForm>

                </MudContainer>

            </DialogContent>
            <DialogActions>
                <MudButton Variant="Variant.Filled" Color="Color.Default" OnClick="Cancel">Cancelar</MudButton>
                <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="Guardar">Guardar</MudButton>
            </DialogActions>
            </MudDialog>

            @code {
    [Parameter]
    public HorarioActividadDTO _horario { get; set; } = new HorarioActividadDTO();

    [CascadingParameter]
    MudDialogInstance MudDialog { get; set; }

    protected override async Task OnInitializedAsync()
    {

    }

    private void Cancel()
    {
        MudDialog.Cancel();
    }

    private async Task Guardar()
    {
        string _mensaje = "";
        bool _resultado;

        if (_horario.IdHorario != 0)
        {
            _resultado = await _horarioActividadServicio.Editar(_horario);
            _mensaje = "La actividad fue modificada";
        }
        else
        {
            var response = await _horarioActividadServicio.Crear(_horario);
            _resultado = response.status;
            _mensaje = "La actividad fue creada";
        }

        if (_resultado)
        {
            _snackBar.Add(_mensaje, Severity.Success, a => a.VisibleStateDuration = 500);
            MudDialog.Close(DialogResult.Ok(true));
        }
        else
            _snackBar.Add("Error al guardar cambios", Severity.Error, a => a.VisibleStateDuration = 500);

    }
}
