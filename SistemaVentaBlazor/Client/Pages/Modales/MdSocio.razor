@inject ISocioService _socioServicio
@inject ISnackbar _snackBar

<MudDialog Style="width:400px">

    <DialogContent>
        <MudContainer Style="max-height: 400px; overflow-y: scroll" Class="m-0 p-0">

            <EditForm Model="@_socio">

                <MudTextField @bind-Value="@_socio.Nombre" Required RequiredError="Ingrese Nombre" Class="mb-3"
                              Label="Nombre" Variant="Variant.Outlined" Adornment="Adornment.End" AdornmentIcon="@Icons.Material.Filled.Person" />

                <MudTextField @bind-Value="@_socio.Apellido" Required RequiredError="Ingrese Apellido" Class="mb-3"
                              Label="Apellido" Variant="Variant.Outlined" Adornment="Adornment.End" AdornmentIcon="@Icons.Material.Filled.Person" />

                 <MudTextField @bind-Value="@_socio.Cedula" Required RequiredError="Ingrese Cédula" Class="mb-3"
                               Label="Cedula" ReadOnly="@IsCedulaReadOnly" Variant="Variant.Outlined" Adornment="Adornment.End" AdornmentIcon="@Icons.Material.Filled.PermIdentity" />

                <MudTextField @bind-Value="@_socio.Telefono" Required RequiredError="Ingrese Teléfono" Class="mb-3"
                              Label="Teléfono" Variant="Variant.Outlined" Adornment="Adornment.End" AdornmentIcon="@Icons.Material.Filled.Phone" />

                <MudTextField @bind-Value="@_socio.Correo" Required RequiredError="Ingrese Correo" Class="mb-3"
                              Label="Correo" Variant="Variant.Outlined" Adornment="Adornment.End" AdornmentIcon="@Icons.Material.Filled.Email" />

                <MudDatePicker @bind-Date="@_socio.FechaInicioMembresia" Required RequiredError="Ingrese Fecha de inicio de la membresia" 
                              Label="Fecha de Inicio de la Membresia" Class="mb-3" />

                <MudSelect @bind-Value="@_socio.Activo" Label="Actividad" AnchorOrigin="Origin.BottomCenter" ItemConverter="StringToBoolConverter">
                    <MudSelectItem Value="true">Activo</MudSelectItem>
                    <MudSelectItem Value="false">Inactivo</MudSelectItem>
                </MudSelect>

                <MudTextField @bind-Value="@_socio.Restricciones" Required RequiredError="Ingrese Restricciones" Class="mb-3"
                              Label="Restricciones" Variant="Variant.Outlined" Adornment="Adornment.End" AdornmentIcon="@Icons.Material.Filled.Cancel" />

                <MudTextField @bind-Value="@_socio.Mutualista" Required RequiredError="Ingrese Mutualista" Class="mb-3"
                              Label="Mutualista" Variant="Variant.Outlined" Adornment="Adornment.End" AdornmentIcon="@Icons.Material.Filled.LocalHospital" />
                
                <MudTextField @bind-Value="@_socio.Direccion" Required RequiredError="Ingrese Dirección" Class="mb-3"
                              Label="Dirección" Variant="Variant.Outlined" Adornment="Adornment.End" AdornmentIcon="@Icons.Material.Filled.MyLocation" />
                
                <MudTextField @bind-Value="@_socio.TelefonoContacto" Required RequiredError="Ingrese Teléfono de Contacto" Class="mb-3"
                              Label="Teléfono de Contacto" Variant="Variant.Outlined" Adornment="Adornment.End" AdornmentIcon="@Icons.Material.Filled.ContactPhone" />

            </EditForm>

        </MudContainer>

    </DialogContent>
    <DialogActions>
        <MudButton Variant="Variant.Filled" Color="Color.Default" OnClick="Cancel">Cancelar</MudButton>
        <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="Guardar">Guardar</MudButton>
    </DialogActions>
</MudDialog>

@code {

    [Parameter] public SocioDTO _socio { get; set; } = new SocioDTO();

    [Parameter] public bool IsCedulaReadOnly { get; set; }

    bool isShow;
    InputType PasswordInput = InputType.Password;
    string PasswordInputIcon = Icons.Material.Filled.VisibilityOff;

    [CascadingParameter]
    MudDialogInstance MudDialog { get; set; }

    bool StringToBoolConverter(string stringValue)
    {
        return bool.Parse(stringValue);
    }

    protected override async Task OnInitializedAsync()
    {
       
    }

    void MostrarClave()
    {
        @if (isShow)
        {
            isShow = false;
            PasswordInputIcon = Icons.Material.Filled.VisibilityOff;
            PasswordInput = InputType.Password;
        }
        else
        {
            isShow = true;
            PasswordInputIcon = Icons.Material.Filled.Visibility;
            PasswordInput = InputType.Text;
        }
    }

    private void Cancel()
    {
        MudDialog.Cancel();
    }

    private async Task Guardar()
    {
        string _mensaje = "";
        bool _resultado;

        if (string.IsNullOrEmpty(_socio.Nombre) ||
       string.IsNullOrEmpty(_socio.Apellido) ||
       string.IsNullOrEmpty(_socio.Telefono) ||
       string.IsNullOrEmpty(_socio.Correo) ||
       string.IsNullOrEmpty(_socio.Restricciones) ||
       string.IsNullOrEmpty(_socio.Mutualista) ||
       string.IsNullOrEmpty(_socio.Direccion) ||
       string.IsNullOrEmpty(_socio.TelefonoContacto) ||
       (_socio.FechaInicioMembresia == null))
        {
            _snackBar.Add("Complete los campos requeridos.", Severity.Error, a => a.VisibleStateDuration = 500);
            return;
        }

        if (_socio.IdSocio != 0)
        {
            _resultado = await _socioServicio.Editar(_socio);
            _mensaje = "Socio fue modificado";
        }
        else
        {
            var response = await _socioServicio.Crear(_socio);
            _resultado = response.status;
            _mensaje = "Socio fue creado";
        }

        if (_resultado)
        {
            _snackBar.Add(_mensaje, Severity.Success, a => a.VisibleStateDuration = 500);
            MudDialog.Close(DialogResult.Ok(true));
        }
        else
            _snackBar.Add("Error al guardar cambios", Severity.Error, a => a.VisibleStateDuration = 500);

    }
}
