@inject ICategoriaService _categoriaServicio
@inject ISnackbar _snackBar

<MudDialog Style="width:400px">

    <DialogContent>
        <MudContainer Style="max-height: 400px; overflow-y: scroll" Class="m-0 p-0">

            <EditForm Model="@_categoria">

                <MudTextField @bind-Value="@_categoria.Descripcion" Required Class="mb-3"
                              Label="Descripción" Variant="Variant.Outlined" Adornment="Adornment.End" AdornmentIcon="@Icons.Material.Filled.Person" />

                </EditForm>

                </MudContainer>

            </DialogContent>
            <DialogActions>
                <MudButton Variant="Variant.Filled" Color="Color.Default" OnClick="Cancel">Cancelar</MudButton>
                <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="Guardar">Guardar</MudButton>
            </DialogActions>
            </MudDialog>

            @code {
    [Parameter]
    public CategoriaDTO _categoria { get; set; } = new CategoriaDTO();

    bool isShow;
    InputType PasswordInput = InputType.Password;
    string PasswordInputIcon = Icons.Material.Filled.VisibilityOff;

    [CascadingParameter]
    MudDialogInstance MudDialog { get; set; }



    protected override async Task OnInitializedAsync()
    {

    }

    void MostrarClave()
    {
        @if (isShow)
        {
            isShow = false;
            PasswordInputIcon = Icons.Material.Filled.VisibilityOff;
            PasswordInput = InputType.Password;
        }
        else
        {
            isShow = true;
            PasswordInputIcon = Icons.Material.Filled.Visibility;
            PasswordInput = InputType.Text;
        }
    }
    private void Cancel()
    {
        MudDialog.Cancel();
    }
    private async Task Guardar()
    {
        string _mensaje = "";
        bool _resultado;

        if (_categoria.IdCategoria != 0)
        {
            _resultado = await _categoriaServicio.Editar(_categoria);
            _mensaje = "Categoria fue modificado";
        }
        else
        {
            var response = await _categoriaServicio.Crear(_categoria);
            _resultado = response.status;
            _mensaje = "Categoria fue creado";
        }

        if (_resultado)
        {
            _snackBar.Add(_mensaje, Severity.Success, a => a.VisibleStateDuration = 500);
            MudDialog.Close(DialogResult.Ok(true));
        }
        else
            _snackBar.Add("Error al guardar cambios", Severity.Error, a => a.VisibleStateDuration = 500);

    }
}
